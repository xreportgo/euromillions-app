{"ast":null,"code":"// services/gridService.js\nimport apiClient from './apiService';\nexport const generateGrids = async params => {\n  return await apiClient.post('/grids/generate', params);\n};\nexport const getAllGrids = async () => {\n  return await apiClient.get('/grids');\n};\nexport const getGridById = async id => {\n  return await apiClient.get(`/grids/${id}`);\n};\nexport const saveGrid = async grid => {\n  return await apiClient.post('/grids', grid);\n};\nexport const updateGrid = async (id, data) => {\n  return await apiClient.put(`/grids/${id}`, data);\n};\nexport const deleteGrid = async id => {\n  return await apiClient.delete(`/grids/${id}`);\n};\nexport const exportGrids = async (format = 'csv', ids = null) => {\n  let url = `/grids/export?format=${format}`;\n  if (ids && ids.length > 0) {\n    url += `&ids=${ids.join(',')}`;\n  }\n  return await apiClient.get(url, {\n    responseType: 'blob'\n  });\n};\nexport const printGrid = grid => {\n  // Créer une nouvelle fenêtre pour l'impression\n  const printWindow = window.open('', '_blank');\n\n  // Appliquer un style pour l'impression\n  printWindow.document.write(`\n    <html>\n      <head>\n        <title>Grille Euromillions</title>\n        <style>\n          body { font-family: Arial, sans-serif; padding: 20px; }\n          .grid-container { border: 1px solid #ccc; padding: 15px; max-width: 400px; margin: 0 auto; }\n          .grid-name { font-size: 18px; font-weight: bold; margin-bottom: 10px; }\n          .numbers-container { display: flex; justify-content: center; margin-bottom: 10px; }\n          .stars-container { display: flex; justify-content: center; }\n          .ball { display: inline-flex; align-items: center; justify-content: center; \n                 width: 40px; height: 40px; border-radius: 50%; margin: 0 5px; \n                 font-weight: bold; color: white; }\n          .number { background-color: #004b9f; }\n          .star { background-color: #fc0; color: #333; }\n          .footer { margin-top: 15px; font-size: 12px; text-align: center; color: #666; }\n        </style>\n      </head>\n      <body>\n        <div class=\"grid-container\">\n          <div class=\"grid-name\">${grid.name || 'Grille Euromillions'}</div>\n          <div class=\"numbers-container\">\n            ${grid.numbers.map(num => `<div class=\"ball number\">${num}</div>`).join('')}\n          </div>\n          <div class=\"stars-container\">\n            ${grid.stars.map(star => `<div class=\"ball star\">${star}</div>`).join('')}\n          </div>\n          <div class=\"footer\">Imprimé le ${new Date().toLocaleDateString()}</div>\n        </div>\n      </body>\n    </html>\n  `);\n\n  // Fermer le document et lancer l'impression\n  printWindow.document.close();\n  printWindow.focus();\n  setTimeout(() => {\n    printWindow.print();\n  }, 250);\n};","map":{"version":3,"names":["apiClient","generateGrids","params","post","getAllGrids","get","getGridById","id","saveGrid","grid","updateGrid","data","put","deleteGrid","delete","exportGrids","format","ids","url","length","join","responseType","printGrid","printWindow","window","open","document","write","name","numbers","map","num","stars","star","Date","toLocaleDateString","close","focus","setTimeout","print"],"sources":["C:/Users/Rga/euromillions-app/frontend/src/services/gridService.js"],"sourcesContent":["// services/gridService.js\r\nimport apiClient from './apiService';\r\n\r\nexport const generateGrids = async (params) => {\r\n  return await apiClient.post('/grids/generate', params);\r\n};\r\n\r\nexport const getAllGrids = async () => {\r\n  return await apiClient.get('/grids');\r\n};\r\n\r\nexport const getGridById = async (id) => {\r\n  return await apiClient.get(`/grids/${id}`);\r\n};\r\n\r\nexport const saveGrid = async (grid) => {\r\n  return await apiClient.post('/grids', grid);\r\n};\r\n\r\nexport const updateGrid = async (id, data) => {\r\n  return await apiClient.put(`/grids/${id}`, data);\r\n};\r\n\r\nexport const deleteGrid = async (id) => {\r\n  return await apiClient.delete(`/grids/${id}`);\r\n};\r\n\r\nexport const exportGrids = async (format = 'csv', ids = null) => {\r\n  let url = `/grids/export?format=${format}`;\r\n  if (ids && ids.length > 0) {\r\n    url += `&ids=${ids.join(',')}`;\r\n  }\r\n  return await apiClient.get(url, { responseType: 'blob' });\r\n};\r\n\r\nexport const printGrid = (grid) => {\r\n  // Créer une nouvelle fenêtre pour l'impression\r\n  const printWindow = window.open('', '_blank');\r\n  \r\n  // Appliquer un style pour l'impression\r\n  printWindow.document.write(`\r\n    <html>\r\n      <head>\r\n        <title>Grille Euromillions</title>\r\n        <style>\r\n          body { font-family: Arial, sans-serif; padding: 20px; }\r\n          .grid-container { border: 1px solid #ccc; padding: 15px; max-width: 400px; margin: 0 auto; }\r\n          .grid-name { font-size: 18px; font-weight: bold; margin-bottom: 10px; }\r\n          .numbers-container { display: flex; justify-content: center; margin-bottom: 10px; }\r\n          .stars-container { display: flex; justify-content: center; }\r\n          .ball { display: inline-flex; align-items: center; justify-content: center; \r\n                 width: 40px; height: 40px; border-radius: 50%; margin: 0 5px; \r\n                 font-weight: bold; color: white; }\r\n          .number { background-color: #004b9f; }\r\n          .star { background-color: #fc0; color: #333; }\r\n          .footer { margin-top: 15px; font-size: 12px; text-align: center; color: #666; }\r\n        </style>\r\n      </head>\r\n      <body>\r\n        <div class=\"grid-container\">\r\n          <div class=\"grid-name\">${grid.name || 'Grille Euromillions'}</div>\r\n          <div class=\"numbers-container\">\r\n            ${grid.numbers.map(num => `<div class=\"ball number\">${num}</div>`).join('')}\r\n          </div>\r\n          <div class=\"stars-container\">\r\n            ${grid.stars.map(star => `<div class=\"ball star\">${star}</div>`).join('')}\r\n          </div>\r\n          <div class=\"footer\">Imprimé le ${new Date().toLocaleDateString()}</div>\r\n        </div>\r\n      </body>\r\n    </html>\r\n  `);\r\n  \r\n  // Fermer le document et lancer l'impression\r\n  printWindow.document.close();\r\n  printWindow.focus();\r\n  setTimeout(() => {\r\n    printWindow.print();\r\n  }, 250);\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,SAAS,MAAM,cAAc;AAEpC,OAAO,MAAMC,aAAa,GAAG,MAAOC,MAAM,IAAK;EAC7C,OAAO,MAAMF,SAAS,CAACG,IAAI,CAAC,iBAAiB,EAAED,MAAM,CAAC;AACxD,CAAC;AAED,OAAO,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,OAAO,MAAMJ,SAAS,CAACK,GAAG,CAAC,QAAQ,CAAC;AACtC,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAOC,EAAE,IAAK;EACvC,OAAO,MAAMP,SAAS,CAACK,GAAG,CAAC,UAAUE,EAAE,EAAE,CAAC;AAC5C,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,MAAOC,IAAI,IAAK;EACtC,OAAO,MAAMT,SAAS,CAACG,IAAI,CAAC,QAAQ,EAAEM,IAAI,CAAC;AAC7C,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOH,EAAE,EAAEI,IAAI,KAAK;EAC5C,OAAO,MAAMX,SAAS,CAACY,GAAG,CAAC,UAAUL,EAAE,EAAE,EAAEI,IAAI,CAAC;AAClD,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAON,EAAE,IAAK;EACtC,OAAO,MAAMP,SAAS,CAACc,MAAM,CAAC,UAAUP,EAAE,EAAE,CAAC;AAC/C,CAAC;AAED,OAAO,MAAMQ,WAAW,GAAG,MAAAA,CAAOC,MAAM,GAAG,KAAK,EAAEC,GAAG,GAAG,IAAI,KAAK;EAC/D,IAAIC,GAAG,GAAG,wBAAwBF,MAAM,EAAE;EAC1C,IAAIC,GAAG,IAAIA,GAAG,CAACE,MAAM,GAAG,CAAC,EAAE;IACzBD,GAAG,IAAI,QAAQD,GAAG,CAACG,IAAI,CAAC,GAAG,CAAC,EAAE;EAChC;EACA,OAAO,MAAMpB,SAAS,CAACK,GAAG,CAACa,GAAG,EAAE;IAAEG,YAAY,EAAE;EAAO,CAAC,CAAC;AAC3D,CAAC;AAED,OAAO,MAAMC,SAAS,GAAIb,IAAI,IAAK;EACjC;EACA,MAAMc,WAAW,GAAGC,MAAM,CAACC,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC;;EAE7C;EACAF,WAAW,CAACG,QAAQ,CAACC,KAAK,CAAC;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmClB,IAAI,CAACmB,IAAI,IAAI,qBAAqB;AACrE;AACA,cAAcnB,IAAI,CAACoB,OAAO,CAACC,GAAG,CAACC,GAAG,IAAI,4BAA4BA,GAAG,QAAQ,CAAC,CAACX,IAAI,CAAC,EAAE,CAAC;AACvF;AACA;AACA,cAAcX,IAAI,CAACuB,KAAK,CAACF,GAAG,CAACG,IAAI,IAAI,0BAA0BA,IAAI,QAAQ,CAAC,CAACb,IAAI,CAAC,EAAE,CAAC;AACrF;AACA,2CAA2C,IAAIc,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;AAC1E;AACA;AACA;AACA,GAAG,CAAC;;EAEF;EACAZ,WAAW,CAACG,QAAQ,CAACU,KAAK,CAAC,CAAC;EAC5Bb,WAAW,CAACc,KAAK,CAAC,CAAC;EACnBC,UAAU,CAAC,MAAM;IACff,WAAW,CAACgB,KAAK,CAAC,CAAC;EACrB,CAAC,EAAE,GAAG,CAAC;AACT,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}