{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rga\\\\Desktop\\\\HelloEuro\\\\euromillions-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// Import des pages\nimport Home from './pages/Home';\nimport LastDraw from './pages/LastDraw';\nimport DrawHistory from './pages/DrawHistory';\nimport Statistics from './pages/Statistics';\nimport Predictions from './pages/Predictions';\nimport SavedGrids from './pages/SavedGrids';\nimport NotFound from './pages/NotFound';\n\n// Import des composants\nimport Layout from './components/Layout';\n\n// Import des services\nimport { checkForUpdates } from './services/updateService';\n\n// Composant principal de l'application\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // État pour gérer les mises à jour disponibles\n  const [updateAvailable, setUpdateAvailable] = useState(false);\n  useEffect(() => {\n    // Vérifier les mises à jour au démarrage\n    const checkUpdates = async () => {\n      try {\n        const hasUpdate = await checkForUpdates();\n        if (hasUpdate) {\n          console.log('Une mise à jour est disponible');\n          setUpdateAvailable(true);\n          // Vous pourriez afficher une notification ici\n        }\n      } catch (error) {\n        console.error('Erreur lors de la vérification des mises à jour:', error);\n      }\n    };\n\n    // Appeler la fonction de vérification des mises à jour\n    checkUpdates();\n\n    // Vérifier si l'élément avec l'ID 'root' existe et le cacher si c'est le cas\n    // Cela permet de masquer l'interface statique HTML quand React prend le contrôle\n    const staticRoot = document.getElementById('root');\n    if (staticRoot) {\n      staticRoot.style.display = 'none';\n    }\n\n    // Assurer que le conteneur React est visible\n    const reactRoot = document.getElementById('react-root');\n    if (reactRoot) {\n      reactRoot.style.display = 'block';\n    }\n  }, []);\n\n  // Redirection des URLs obsolètes vers les nouvelles\n  const redirects = {\n    '/historique-tirages': '/historique',\n    '/statistiques-euromillions': '/statistiques',\n    '/generer-grille': '/mes-grilles'\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      children: [updateAvailable && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#4caf50',\n          color: 'white',\n          padding: '10px',\n          textAlign: 'center'\n        },\n        children: \"Une nouvelle version est disponible. Rafra\\xEEchissez la page pour mettre \\xE0 jour.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dernier-tirage\",\n          element: /*#__PURE__*/_jsxDEV(LastDraw, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/historique\",\n          element: /*#__PURE__*/_jsxDEV(DrawHistory, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/statistiques\",\n          element: /*#__PURE__*/_jsxDEV(Statistics, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/predictions\",\n          element: /*#__PURE__*/_jsxDEV(Predictions, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/mes-grilles\",\n          element: /*#__PURE__*/_jsxDEV(SavedGrids, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), Object.entries(redirects).map(([oldPath, newPath]) => /*#__PURE__*/_jsxDEV(Route, {\n          path: oldPath,\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: newPath,\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 24\n          }, this)\n        }, oldPath, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"bottom-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VnLi6SmtH+12tiWEWwUp9koLu+Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Routes","Route","Navigate","ToastContainer","Home","LastDraw","DrawHistory","Statistics","Predictions","SavedGrids","NotFound","Layout","checkForUpdates","jsxDEV","_jsxDEV","App","_s","updateAvailable","setUpdateAvailable","checkUpdates","hasUpdate","console","log","error","staticRoot","document","getElementById","style","display","reactRoot","redirects","children","backgroundColor","color","padding","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","path","element","Object","entries","map","oldPath","newPath","to","replace","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","_c","$RefreshReg$"],"sources":["C:/Users/Rga/Desktop/HelloEuro/euromillions-app/frontend/src/App.js"],"sourcesContent":["// src/App.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n// Import des pages\r\nimport Home from './pages/Home';\r\nimport LastDraw from './pages/LastDraw';\r\nimport DrawHistory from './pages/DrawHistory';\r\nimport Statistics from './pages/Statistics';\r\nimport Predictions from './pages/Predictions';\r\nimport SavedGrids from './pages/SavedGrids';\r\nimport NotFound from './pages/NotFound';\r\n\r\n// Import des composants\r\nimport Layout from './components/Layout';\r\n\r\n// Import des services\r\nimport { checkForUpdates } from './services/updateService';\r\n\r\n// Composant principal de l'application\r\nfunction App() {\r\n  // État pour gérer les mises à jour disponibles\r\n  const [updateAvailable, setUpdateAvailable] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Vérifier les mises à jour au démarrage\r\n    const checkUpdates = async () => {\r\n      try {\r\n        const hasUpdate = await checkForUpdates();\r\n        if (hasUpdate) {\r\n          console.log('Une mise à jour est disponible');\r\n          setUpdateAvailable(true);\r\n          // Vous pourriez afficher une notification ici\r\n        }\r\n      } catch (error) {\r\n        console.error('Erreur lors de la vérification des mises à jour:', error);\r\n      }\r\n    };\r\n\r\n    // Appeler la fonction de vérification des mises à jour\r\n    checkUpdates();\r\n\r\n    // Vérifier si l'élément avec l'ID 'root' existe et le cacher si c'est le cas\r\n    // Cela permet de masquer l'interface statique HTML quand React prend le contrôle\r\n    const staticRoot = document.getElementById('root');\r\n    if (staticRoot) {\r\n      staticRoot.style.display = 'none';\r\n    }\r\n\r\n    // Assurer que le conteneur React est visible\r\n    const reactRoot = document.getElementById('react-root');\r\n    if (reactRoot) {\r\n      reactRoot.style.display = 'block';\r\n    }\r\n  }, []);\r\n\r\n  // Redirection des URLs obsolètes vers les nouvelles\r\n  const redirects = {\r\n    '/historique-tirages': '/historique',\r\n    '/statistiques-euromillions': '/statistiques',\r\n    '/generer-grille': '/mes-grilles',\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Layout>\r\n        {/* Bannière de mise à jour si nécessaire */}\r\n        {updateAvailable && (\r\n          <div style={{ \r\n            backgroundColor: '#4caf50', \r\n            color: 'white', \r\n            padding: '10px', \r\n            textAlign: 'center' \r\n          }}>\r\n            Une nouvelle version est disponible. Rafraîchissez la page pour mettre à jour.\r\n          </div>\r\n        )}\r\n        \r\n        {/* Routes de l'application */}\r\n        <Routes>\r\n          {/* Pages principales */}\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/dernier-tirage\" element={<LastDraw />} />\r\n          <Route path=\"/historique\" element={<DrawHistory />} />\r\n          <Route path=\"/statistiques\" element={<Statistics />} />\r\n          <Route path=\"/predictions\" element={<Predictions />} />\r\n          <Route path=\"/mes-grilles\" element={<SavedGrids />} />\r\n          \r\n          {/* Redirections pour les anciennes URLs */}\r\n          {Object.entries(redirects).map(([oldPath, newPath]) => (\r\n            <Route \r\n              key={oldPath} \r\n              path={oldPath} \r\n              element={<Navigate to={newPath} replace />} \r\n            />\r\n          ))}\r\n          \r\n          {/* Page 404 pour les routes non trouvées */}\r\n          <Route path=\"*\" element={<NotFound />} />\r\n        </Routes>\r\n      </Layout>\r\n      \r\n      {/* Configuration des notifications toast */}\r\n      <ToastContainer \r\n        position=\"bottom-right\" \r\n        autoClose={5000} \r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}