{"ast":null,"code":"// redux/reducers/gridReducer.js\nimport * as types from '../types';\nconst initialState = {\n  savedGrids: [],\n  loading: false,\n  error: null\n};\nconst gridReducer = (state = initialState, action) => {\n  switch (action.type) {\n    // Fetch saved grids\n    case types.FETCH_SAVED_GRIDS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case types.FETCH_SAVED_GRIDS_SUCCESS:\n      return {\n        ...state,\n        savedGrids: action.payload,\n        loading: false\n      };\n    case types.FETCH_SAVED_GRIDS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    // Save grid  \n    case types.SAVE_GRID_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case types.SAVE_GRID_SUCCESS:\n      return {\n        ...state,\n        savedGrids: [action.payload, ...state.savedGrids],\n        loading: false\n      };\n    case types.SAVE_GRID_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    // Update grid\n    case types.UPDATE_GRID_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case types.UPDATE_GRID_SUCCESS:\n      return {\n        ...state,\n        savedGrids: state.savedGrids.map(grid => grid._id === action.payload._id ? action.payload : grid),\n        loading: false\n      };\n    case types.UPDATE_GRID_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    // Delete grid\n    case types.DELETE_GRID_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case types.DELETE_GRID_SUCCESS:\n      return {\n        ...state,\n        savedGrids: state.savedGrids.filter(grid => grid._id !== action.payload),\n        loading: false\n      };\n    case types.DELETE_GRID_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error\n      };\n    default:\n      return state;\n  }\n};\nexport default gridReducer;","map":{"version":3,"names":["types","initialState","savedGrids","loading","error","gridReducer","state","action","type","FETCH_SAVED_GRIDS_REQUEST","FETCH_SAVED_GRIDS_SUCCESS","payload","FETCH_SAVED_GRIDS_FAILURE","SAVE_GRID_REQUEST","SAVE_GRID_SUCCESS","SAVE_GRID_FAILURE","UPDATE_GRID_REQUEST","UPDATE_GRID_SUCCESS","map","grid","_id","UPDATE_GRID_FAILURE","DELETE_GRID_REQUEST","DELETE_GRID_SUCCESS","filter","DELETE_GRID_FAILURE"],"sources":["C:/Users/Rga/euromillions-app/frontend/src/redux/reducers/gridReducer.js"],"sourcesContent":["// redux/reducers/gridReducer.js\r\nimport * as types from '../types';\r\n\r\nconst initialState = {\r\n  savedGrids: [],\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nconst gridReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    // Fetch saved grids\r\n    case types.FETCH_SAVED_GRIDS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case types.FETCH_SAVED_GRIDS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        savedGrids: action.payload,\r\n        loading: false\r\n      };\r\n    case types.FETCH_SAVED_GRIDS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n      \r\n    // Save grid  \r\n    case types.SAVE_GRID_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case types.SAVE_GRID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        savedGrids: [action.payload, ...state.savedGrids],\r\n        loading: false\r\n      };\r\n    case types.SAVE_GRID_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    \r\n    // Update grid\r\n    case types.UPDATE_GRID_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case types.UPDATE_GRID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        savedGrids: state.savedGrids.map(grid => \r\n          grid._id === action.payload._id ? action.payload : grid\r\n        ),\r\n        loading: false\r\n      };\r\n    case types.UPDATE_GRID_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    \r\n    // Delete grid\r\n    case types.DELETE_GRID_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case types.DELETE_GRID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        savedGrids: state.savedGrids.filter(\r\n          grid => grid._id !== action.payload\r\n        ),\r\n        loading: false\r\n      };\r\n    case types.DELETE_GRID_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error\r\n      };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default gridReducer;\r\n"],"mappings":"AAAA;AACA,OAAO,KAAKA,KAAK,MAAM,UAAU;AAEjC,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,EAAE;EACdC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB;IACA,KAAKR,KAAK,CAACS,yBAAyB;MAClC,OAAO;QACL,GAAGH,KAAK;QACRH,OAAO,EAAE,IAAI;QACbC,KAAK,EAAE;MACT,CAAC;IACH,KAAKJ,KAAK,CAACU,yBAAyB;MAClC,OAAO;QACL,GAAGJ,KAAK;QACRJ,UAAU,EAAEK,MAAM,CAACI,OAAO;QAC1BR,OAAO,EAAE;MACX,CAAC;IACH,KAAKH,KAAK,CAACY,yBAAyB;MAClC,OAAO;QACL,GAAGN,KAAK;QACRH,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEG,MAAM,CAACI;MAChB,CAAC;;IAEH;IACA,KAAKX,KAAK,CAACa,iBAAiB;MAC1B,OAAO;QACL,GAAGP,KAAK;QACRH,OAAO,EAAE,IAAI;QACbC,KAAK,EAAE;MACT,CAAC;IACH,KAAKJ,KAAK,CAACc,iBAAiB;MAC1B,OAAO;QACL,GAAGR,KAAK;QACRJ,UAAU,EAAE,CAACK,MAAM,CAACI,OAAO,EAAE,GAAGL,KAAK,CAACJ,UAAU,CAAC;QACjDC,OAAO,EAAE;MACX,CAAC;IACH,KAAKH,KAAK,CAACe,iBAAiB;MAC1B,OAAO;QACL,GAAGT,KAAK;QACRH,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEG,MAAM,CAACI;MAChB,CAAC;;IAEH;IACA,KAAKX,KAAK,CAACgB,mBAAmB;MAC5B,OAAO;QACL,GAAGV,KAAK;QACRH,OAAO,EAAE,IAAI;QACbC,KAAK,EAAE;MACT,CAAC;IACH,KAAKJ,KAAK,CAACiB,mBAAmB;MAC5B,OAAO;QACL,GAAGX,KAAK;QACRJ,UAAU,EAAEI,KAAK,CAACJ,UAAU,CAACgB,GAAG,CAACC,IAAI,IACnCA,IAAI,CAACC,GAAG,KAAKb,MAAM,CAACI,OAAO,CAACS,GAAG,GAAGb,MAAM,CAACI,OAAO,GAAGQ,IACrD,CAAC;QACDhB,OAAO,EAAE;MACX,CAAC;IACH,KAAKH,KAAK,CAACqB,mBAAmB;MAC5B,OAAO;QACL,GAAGf,KAAK;QACRH,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEG,MAAM,CAACI;MAChB,CAAC;;IAEH;IACA,KAAKX,KAAK,CAACsB,mBAAmB;MAC5B,OAAO;QACL,GAAGhB,KAAK;QACRH,OAAO,EAAE,IAAI;QACbC,KAAK,EAAE;MACT,CAAC;IACH,KAAKJ,KAAK,CAACuB,mBAAmB;MAC5B,OAAO;QACL,GAAGjB,KAAK;QACRJ,UAAU,EAAEI,KAAK,CAACJ,UAAU,CAACsB,MAAM,CACjCL,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKb,MAAM,CAACI,OAC9B,CAAC;QACDR,OAAO,EAAE;MACX,CAAC;IACH,KAAKH,KAAK,CAACyB,mBAAmB;MAC5B,OAAO;QACL,GAAGnB,KAAK;QACRH,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEG,MAAM,CAACI,OAAO,CAACP;MACxB,CAAC;IAEH;MACE,OAAOE,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}