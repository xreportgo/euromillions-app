{"ast":null,"code":"// services/apiService.js\nimport axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || '/api';\n\n// Create an axios instance\nconst apiClient = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napiClient.interceptors.request.use(config => {\n  // You can add auth token here if needed\n  // const token = localStorage.getItem('token');\n  // if (token) {\n  //   config.headers.Authorization = `Bearer ${token}`;\n  // }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napiClient.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  var _error$response, _error$response$data;\n  const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Une erreur est survenue';\n\n  // Log errors in development\n  if (process.env.NODE_ENV !== 'production') {\n    console.error('API Error:', error.response || error);\n  }\n  return Promise.reject(new Error(errorMessage));\n});\nexport default apiClient;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","headers","interceptors","request","use","config","error","Promise","reject","response","data","_error$response","_error$response$data","errorMessage","message","NODE_ENV","console","Error"],"sources":["C:/Users/Rga/euromillions-app/frontend/src/services/apiService.js"],"sourcesContent":["// services/apiService.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || '/api';\r\n\r\n// Create an axios instance\r\nconst apiClient = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Request interceptor\r\napiClient.interceptors.request.use(\r\n  config => {\r\n    // You can add auth token here if needed\r\n    // const token = localStorage.getItem('token');\r\n    // if (token) {\r\n    //   config.headers.Authorization = `Bearer ${token}`;\r\n    // }\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napiClient.interceptors.response.use(\r\n  response => {\r\n    return response.data;\r\n  },\r\n  error => {\r\n    const errorMessage =\r\n      error.response?.data?.message ||\r\n      error.message ||\r\n      'Une erreur est survenue';\r\n      \r\n    // Log errors in development\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      console.error('API Error:', error.response || error);\r\n    }\r\n    \r\n    return Promise.reject(new Error(errorMessage));\r\n  }\r\n);\r\n\r\nexport default apiClient;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,MAAM;;AAEvD;AACA,MAAMC,SAAS,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC7BC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,SAAS,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAChCC,MAAM,IAAI;EACR;EACA;EACA;EACA;EACA;EACA,OAAOA,MAAM;AACf,CAAC,EACDC,KAAK,IAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAR,SAAS,CAACI,YAAY,CAACO,QAAQ,CAACL,GAAG,CACjCK,QAAQ,IAAI;EACV,OAAOA,QAAQ,CAACC,IAAI;AACtB,CAAC,EACDJ,KAAK,IAAI;EAAA,IAAAK,eAAA,EAAAC,oBAAA;EACP,MAAMC,YAAY,GAChB,EAAAF,eAAA,GAAAL,KAAK,CAACG,QAAQ,cAAAE,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBD,IAAI,cAAAE,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAC7BR,KAAK,CAACQ,OAAO,IACb,yBAAyB;;EAE3B;EACA,IAAInB,OAAO,CAACC,GAAG,CAACmB,QAAQ,KAAK,YAAY,EAAE;IACzCC,OAAO,CAACV,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAAC;EACtD;EAEA,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIS,KAAK,CAACJ,YAAY,CAAC,CAAC;AAChD,CACF,CAAC;AAED,eAAef,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}