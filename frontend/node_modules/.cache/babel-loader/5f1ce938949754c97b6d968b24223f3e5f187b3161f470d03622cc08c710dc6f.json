{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rga\\\\Desktop\\\\HelloEuro\\\\euromillions-app\\\\frontend\\\\src\\\\pages\\\\Statistics.js\",\n  _s = $RefreshSig$();\n// src/pages/Statistics.js\nimport React, { useState, useEffect } from 'react';\n\n// Composant simple de graphique à barres\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = ({\n  data,\n  dataKey,\n  nameKey,\n  height,\n  colors\n}) => {\n  const maxValue = Math.max(...data.map(item => item[dataKey]));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: height,\n      position: 'relative'\n    },\n    children: data.map((item, index) => {\n      const value = item[dataKey];\n      const barHeight = value / maxValue * height * 0.8;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block',\n          width: `${90 / data.length}%`,\n          margin: '0 0.5%',\n          height: '100%',\n          position: 'relative',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            bottom: '20%',\n            left: 0,\n            right: 0,\n            height: barHeight,\n            backgroundColor: colors[index % colors.length],\n            borderRadius: '4px',\n            transition: 'height 0.3s'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            right: 0,\n            textAlign: 'center',\n            fontSize: '12px',\n            fontWeight: 'bold'\n          },\n          children: item[nameKey]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            bottom: `calc(20% + ${barHeight}px + 5px)`,\n            left: 0,\n            right: 0,\n            textAlign: 'center',\n            fontSize: '12px'\n          },\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n// Composant simple de graphique en camembert\n_c = BarChart;\nconst PieChart = ({\n  data,\n  dataKey,\n  nameKey,\n  colors\n}) => {\n  const total = data.reduce((sum, item) => sum + item[dataKey], 0);\n  let currentAngle = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      width: '200px',\n      height: '200px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"200\",\n      height: \"200\",\n      viewBox: \"0 0 200 200\",\n      children: data.map((item, index) => {\n        const value = item[dataKey];\n        const percentage = value / total;\n        const startAngle = currentAngle;\n        const angleSize = percentage * 360;\n        currentAngle += angleSize;\n        const startRadians = (startAngle - 90) * Math.PI / 180;\n        const endRadians = (startAngle + angleSize - 90) * Math.PI / 180;\n        const x1 = 100 + 100 * Math.cos(startRadians);\n        const y1 = 100 + 100 * Math.sin(startRadians);\n        const x2 = 100 + 100 * Math.cos(endRadians);\n        const y2 = 100 + 100 * Math.sin(endRadians);\n        const largeArcFlag = angleSize > 180 ? 1 : 0;\n        const pathData = [`M 100 100`, `L ${x1} ${y1}`, `A 100 100 0 ${largeArcFlag} 1 ${x2} ${y2}`, `Z`].join(' ');\n\n        // Calculate text position\n        const midAngle = startAngle + angleSize / 2;\n        const midRadians = (midAngle - 90) * Math.PI / 180;\n        const textX = 100 + 70 * Math.cos(midRadians);\n        const textY = 100 + 70 * Math.sin(midRadians);\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n            d: pathData,\n            fill: colors[index % colors.length],\n            stroke: \"#fff\",\n            strokeWidth: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), percentage > 0.1 && /*#__PURE__*/_jsxDEV(\"text\", {\n            x: textX,\n            y: textY,\n            textAnchor: \"middle\",\n            dominantBaseline: \"middle\",\n            fill: \"#fff\",\n            fontSize: \"12\",\n            fontWeight: \"bold\",\n            children: item[nameKey]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        bottom: '-40px',\n        left: '0',\n        right: '0',\n        textAlign: 'center',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        gap: '10px'\n      },\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '12px',\n            height: '12px',\n            backgroundColor: colors[index % colors.length],\n            marginRight: '5px',\n            display: 'inline-block'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '12px'\n          },\n          children: [item[nameKey], \": \", Math.round(item[dataKey] / total * 100), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_c2 = PieChart;\nconst Statistics = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [numberFrequency, setNumberFrequency] = useState([]);\n  const [starFrequency, setStarFrequency] = useState([]);\n  const [drawDayDistribution, setDrawDayDistribution] = useState([]);\n\n  // Couleurs pour les graphiques\n  const colors = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8', '#D88489', '#82ca9d', '#ffc658'];\n  useEffect(() => {\n    // Fonction pour charger les statistiques\n    const fetchStatistics = async () => {\n      setLoading(true);\n      try {\n        // Simuler un appel API (à remplacer par votre vrai appel API)\n        await new Promise(resolve => setTimeout(resolve, 1500));\n\n        // Générer des données fictives pour les fréquences des numéros\n        const numbersData = Array.from({\n          length: 50\n        }, (_, i) => ({\n          number: i + 1,\n          frequency: Math.floor(Math.random() * 100) + 10\n        })).sort((a, b) => b.frequency - a.frequency).slice(0, 10);\n\n        // Générer des données fictives pour les fréquences des étoiles\n        const starsData = Array.from({\n          length: 12\n        }, (_, i) => ({\n          star: i + 1,\n          frequency: Math.floor(Math.random() * 100) + 20\n        }));\n\n        // Générer des données fictives pour la distribution des jours de tirage\n        const daysData = [{\n          name: 'Mardi',\n          value: 45\n        }, {\n          name: 'Vendredi',\n          value: 55\n        }];\n        setNumberFrequency(numbersData);\n        setStarFrequency(starsData);\n        setDrawDayDistribution(daysData);\n        setError(null);\n      } catch (err) {\n        console.error('Erreur lors du chargement des statistiques:', err);\n        setError('Impossible de charger les statistiques');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStatistics();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Statistiques EuroMillions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: \"Explorez les statistiques des tirages EuroMillions pour comprendre les tendances.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Chargement des statistiques...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-alert\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginLeft: '20px',\n          padding: '5px 10px',\n          border: 'none',\n          background: '#c62828',\n          color: 'white',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        onClick: () => window.location.reload(),\n        children: \"R\\xE9essayer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          gridColumn: '1 / span 2'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Top 10 des num\\xE9ros les plus fr\\xE9quents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '300px',\n            marginTop: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: numberFrequency,\n            dataKey: \"frequency\",\n            nameKey: \"number\",\n            height: 250,\n            colors: colors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          gridColumn: '1 / span 2'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Fr\\xE9quence des \\xE9toiles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '300px',\n            marginTop: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: starFrequency,\n            dataKey: \"frequency\",\n            nameKey: \"star\",\n            height: 250,\n            colors: ['#ffc107', '#ffda47', '#ffe57f', '#fff8cd']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Distribution des jours de tirage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '300px',\n            marginTop: '20px',\n            position: 'relative'\n          },\n          children: /*#__PURE__*/_jsxDEV(PieChart, {\n            data: drawDayDistribution,\n            dataKey: \"value\",\n            nameKey: \"name\",\n            colors: ['#0a1f44', '#0a4473']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Informations cl\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px',\n            lineHeight: '1.8'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nombre total de tirages analys\\xE9s:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 18\n            }, this), \" 1,248\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"P\\xE9riode couverte:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 18\n            }, this), \" 2004 - 2025\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Jackpot moyen:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 18\n            }, this), \" 72.3 millions \\u20AC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Plus gros jackpot:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 18\n            }, this), \" 220 millions \\u20AC (12/10/2021)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Num\\xE9ro le moins fr\\xE9quent:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 18\n            }, this), \" 42 (apparu 48 fois)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\xC9toile la plus fr\\xE9quente:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 18\n            }, this), \" 3 (apparu 195 fois)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '40px 0',\n        padding: '20px',\n        backgroundColor: 'white',\n        borderRadius: '12px',\n        boxShadow: '0 2px 8px rgba(0, 0, 0, 0.08)'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Note:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), \" Ces statistiques sont fournies \\xE0 titre informatif uniquement. Le tirage EuroMillions est un jeu de hasard, et les r\\xE9sultats pass\\xE9s ne pr\\xE9disent pas les r\\xE9sultats futurs.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n_s(Statistics, \"BqjVHwa2UskDaaCnRRlnTKvcAi4=\");\n_c3 = Statistics;\nexport default Statistics;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"BarChart\");\n$RefreshReg$(_c2, \"PieChart\");\n$RefreshReg$(_c3, \"Statistics\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BarChart","data","dataKey","nameKey","height","colors","maxValue","Math","max","map","item","style","position","children","index","value","barHeight","display","width","length","margin","textAlign","bottom","left","right","backgroundColor","borderRadius","transition","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","_c","PieChart","total","reduce","sum","currentAngle","viewBox","percentage","startAngle","angleSize","startRadians","PI","endRadians","x1","cos","y1","sin","x2","y2","largeArcFlag","pathData","join","midAngle","midRadians","textX","textY","d","fill","stroke","strokeWidth","x","y","textAnchor","dominantBaseline","justifyContent","flexWrap","gap","alignItems","marginRight","round","_c2","Statistics","_s","loading","setLoading","error","setError","numberFrequency","setNumberFrequency","starFrequency","setStarFrequency","drawDayDistribution","setDrawDayDistribution","fetchStatistics","Promise","resolve","setTimeout","numbersData","Array","from","_","i","number","frequency","floor","random","sort","a","b","slice","starsData","star","daysData","name","err","console","className","marginLeft","padding","border","background","color","cursor","onClick","window","location","reload","gridColumn","marginTop","lineHeight","boxShadow","_c3","$RefreshReg$"],"sources":["C:/Users/Rga/Desktop/HelloEuro/euromillions-app/frontend/src/pages/Statistics.js"],"sourcesContent":["// src/pages/Statistics.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// Composant simple de graphique à barres\r\nconst BarChart = ({ data, dataKey, nameKey, height, colors }) => {\r\n  const maxValue = Math.max(...data.map(item => item[dataKey]));\r\n  \r\n  return (\r\n    <div style={{ height: height, position: 'relative' }}>\r\n      {data.map((item, index) => {\r\n        const value = item[dataKey];\r\n        const barHeight = (value / maxValue) * height * 0.8;\r\n        \r\n        return (\r\n          <div key={index} style={{ \r\n            display: 'inline-block',\r\n            width: `${90 / data.length}%`,\r\n            margin: '0 0.5%',\r\n            height: '100%',\r\n            position: 'relative',\r\n            textAlign: 'center'\r\n          }}>\r\n            <div style={{\r\n              position: 'absolute',\r\n              bottom: '20%',\r\n              left: 0,\r\n              right: 0,\r\n              height: barHeight,\r\n              backgroundColor: colors[index % colors.length],\r\n              borderRadius: '4px',\r\n              transition: 'height 0.3s'\r\n            }} />\r\n            <div style={{\r\n              position: 'absolute',\r\n              bottom: 0,\r\n              left: 0,\r\n              right: 0,\r\n              textAlign: 'center',\r\n              fontSize: '12px',\r\n              fontWeight: 'bold'\r\n            }}>\r\n              {item[nameKey]}\r\n            </div>\r\n            <div style={{\r\n              position: 'absolute',\r\n              bottom: `calc(20% + ${barHeight}px + 5px)`,\r\n              left: 0,\r\n              right: 0,\r\n              textAlign: 'center',\r\n              fontSize: '12px'\r\n            }}>\r\n              {value}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Composant simple de graphique en camembert\r\nconst PieChart = ({ data, dataKey, nameKey, colors }) => {\r\n  const total = data.reduce((sum, item) => sum + item[dataKey], 0);\r\n  let currentAngle = 0;\r\n  \r\n  return (\r\n    <div style={{ position: 'relative', width: '200px', height: '200px', margin: '0 auto' }}>\r\n      <svg width=\"200\" height=\"200\" viewBox=\"0 0 200 200\">\r\n        {data.map((item, index) => {\r\n          const value = item[dataKey];\r\n          const percentage = value / total;\r\n          const startAngle = currentAngle;\r\n          const angleSize = percentage * 360;\r\n          currentAngle += angleSize;\r\n          \r\n          const startRadians = (startAngle - 90) * Math.PI / 180;\r\n          const endRadians = (startAngle + angleSize - 90) * Math.PI / 180;\r\n          \r\n          const x1 = 100 + 100 * Math.cos(startRadians);\r\n          const y1 = 100 + 100 * Math.sin(startRadians);\r\n          const x2 = 100 + 100 * Math.cos(endRadians);\r\n          const y2 = 100 + 100 * Math.sin(endRadians);\r\n          \r\n          const largeArcFlag = angleSize > 180 ? 1 : 0;\r\n          \r\n          const pathData = [\r\n            `M 100 100`,\r\n            `L ${x1} ${y1}`,\r\n            `A 100 100 0 ${largeArcFlag} 1 ${x2} ${y2}`,\r\n            `Z`\r\n          ].join(' ');\r\n          \r\n          // Calculate text position\r\n          const midAngle = startAngle + angleSize / 2;\r\n          const midRadians = (midAngle - 90) * Math.PI / 180;\r\n          const textX = 100 + 70 * Math.cos(midRadians);\r\n          const textY = 100 + 70 * Math.sin(midRadians);\r\n          \r\n          return (\r\n            <g key={index}>\r\n              <path\r\n                d={pathData}\r\n                fill={colors[index % colors.length]}\r\n                stroke=\"#fff\"\r\n                strokeWidth=\"1\"\r\n              />\r\n              {percentage > 0.1 && (\r\n                <text\r\n                  x={textX}\r\n                  y={textY}\r\n                  textAnchor=\"middle\"\r\n                  dominantBaseline=\"middle\"\r\n                  fill=\"#fff\"\r\n                  fontSize=\"12\"\r\n                  fontWeight=\"bold\"\r\n                >\r\n                  {item[nameKey]}\r\n                </text>\r\n              )}\r\n            </g>\r\n          );\r\n        })}\r\n      </svg>\r\n      <div style={{ \r\n        position: 'absolute', \r\n        bottom: '-40px', \r\n        left: '0', \r\n        right: '0', \r\n        textAlign: 'center',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        gap: '10px'\r\n      }}>\r\n        {data.map((item, index) => (\r\n          <div key={index} style={{ display: 'flex', alignItems: 'center' }}>\r\n            <div style={{ \r\n              width: '12px', \r\n              height: '12px', \r\n              backgroundColor: colors[index % colors.length],\r\n              marginRight: '5px',\r\n              display: 'inline-block'\r\n            }} />\r\n            <span style={{ fontSize: '12px' }}>\r\n              {item[nameKey]}: {Math.round(item[dataKey] / total * 100)}%\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Statistics = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [numberFrequency, setNumberFrequency] = useState([]);\r\n  const [starFrequency, setStarFrequency] = useState([]);\r\n  const [drawDayDistribution, setDrawDayDistribution] = useState([]);\r\n  \r\n  // Couleurs pour les graphiques\r\n  const colors = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8', '#D88489', '#82ca9d', '#ffc658'];\r\n  \r\n  useEffect(() => {\r\n    // Fonction pour charger les statistiques\r\n    const fetchStatistics = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // Simuler un appel API (à remplacer par votre vrai appel API)\r\n        await new Promise(resolve => setTimeout(resolve, 1500));\r\n        \r\n        // Générer des données fictives pour les fréquences des numéros\r\n        const numbersData = Array.from({ length: 50 }, (_, i) => ({\r\n          number: i + 1,\r\n          frequency: Math.floor(Math.random() * 100) + 10\r\n        })).sort((a, b) => b.frequency - a.frequency).slice(0, 10);\r\n        \r\n        // Générer des données fictives pour les fréquences des étoiles\r\n        const starsData = Array.from({ length: 12 }, (_, i) => ({\r\n          star: i + 1,\r\n          frequency: Math.floor(Math.random() * 100) + 20\r\n        }));\r\n        \r\n        // Générer des données fictives pour la distribution des jours de tirage\r\n        const daysData = [\r\n          { name: 'Mardi', value: 45 },\r\n          { name: 'Vendredi', value: 55 }\r\n        ];\r\n        \r\n        setNumberFrequency(numbersData);\r\n        setStarFrequency(starsData);\r\n        setDrawDayDistribution(daysData);\r\n        setError(null);\r\n      } catch (err) {\r\n        console.error('Erreur lors du chargement des statistiques:', err);\r\n        setError('Impossible de charger les statistiques');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchStatistics();\r\n  }, []);\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"text-center\">Statistiques EuroMillions</h1>\r\n      \r\n      <p className=\"text-center\">\r\n        Explorez les statistiques des tirages EuroMillions pour comprendre les tendances.\r\n      </p>\r\n      \r\n      {loading ? (\r\n        <div className=\"loading-container\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Chargement des statistiques...</p>\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"error-alert\">\r\n          {error}\r\n          <button \r\n            style={{marginLeft: '20px', padding: '5px 10px', border: 'none', background: '#c62828', color: 'white', borderRadius: '4px', cursor: 'pointer'}}\r\n            onClick={() => window.location.reload()}\r\n          >\r\n            Réessayer\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"grid-container\">\r\n          {/* Fréquence des numéros */}\r\n          <div className=\"card\" style={{gridColumn: '1 / span 2'}}>\r\n            <h3>Top 10 des numéros les plus fréquents</h3>\r\n            <div style={{height: '300px', marginTop: '20px'}}>\r\n              <BarChart \r\n                data={numberFrequency} \r\n                dataKey=\"frequency\" \r\n                nameKey=\"number\" \r\n                height={250}\r\n                colors={colors}\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Fréquence des étoiles */}\r\n          <div className=\"card\" style={{gridColumn: '1 / span 2'}}>\r\n            <h3>Fréquence des étoiles</h3>\r\n            <div style={{height: '300px', marginTop: '20px'}}>\r\n              <BarChart \r\n                data={starFrequency} \r\n                dataKey=\"frequency\" \r\n                nameKey=\"star\" \r\n                height={250}\r\n                colors={['#ffc107', '#ffda47', '#ffe57f', '#fff8cd']}\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Distribution des jours de tirage */}\r\n          <div className=\"card\">\r\n            <h3>Distribution des jours de tirage</h3>\r\n            <div style={{height: '300px', marginTop: '20px', position: 'relative'}}>\r\n              <PieChart \r\n                data={drawDayDistribution} \r\n                dataKey=\"value\" \r\n                nameKey=\"name\" \r\n                colors={['#0a1f44', '#0a4473']}\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Informations clés */}\r\n          <div className=\"card\">\r\n            <h3>Informations clés</h3>\r\n            <div style={{marginTop: '20px', lineHeight: '1.8'}}>\r\n              <p><strong>Nombre total de tirages analysés:</strong> 1,248</p>\r\n              <p><strong>Période couverte:</strong> 2004 - 2025</p>\r\n              <p><strong>Jackpot moyen:</strong> 72.3 millions €</p>\r\n              <p><strong>Plus gros jackpot:</strong> 220 millions € (12/10/2021)</p>\r\n              <p><strong>Numéro le moins fréquent:</strong> 42 (apparu 48 fois)</p>\r\n              <p><strong>Étoile la plus fréquente:</strong> 3 (apparu 195 fois)</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <div style={{\r\n        margin: '40px 0',\r\n        padding: '20px',\r\n        backgroundColor: 'white',\r\n        borderRadius: '12px',\r\n        boxShadow: '0 2px 8px rgba(0, 0, 0, 0.08)'\r\n      }}>\r\n        <p style={{fontWeight: 'bold'}}>\r\n          <strong>Note:</strong> Ces statistiques sont fournies à titre informatif uniquement.\r\n          Le tirage EuroMillions est un jeu de hasard, et les résultats passés ne prédisent pas\r\n          les résultats futurs.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}