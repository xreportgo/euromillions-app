{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rga\\\\euromillions-app\\\\frontend\\\\src\\\\pages\\\\GenerateGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenerateGrid = () => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [generatedGrids, setGeneratedGrids] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [count, setCount] = useState(1);\n  const [model, setModel] = useState('random');\n\n  // Fonction simplifiée pour générer des grilles\n  const generateSimpleGrids = () => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Créer un tableau de grilles\n      const newGrids = [];\n\n      // Générer le nombre de grilles demandé\n      for (let i = 0; i < count; i++) {\n        // Générer 5 numéros aléatoires entre 1 et 50\n        const numbers = [];\n        while (numbers.length < 5) {\n          const num = Math.floor(Math.random() * 50) + 1;\n          if (!numbers.includes(num)) {\n            numbers.push(num);\n          }\n        }\n        numbers.sort((a, b) => a - b);\n\n        // Générer 2 étoiles aléatoires entre 1 et 12\n        const stars = [];\n        while (stars.length < 2) {\n          const star = Math.floor(Math.random() * 12) + 1;\n          if (!stars.includes(star)) {\n            stars.push(star);\n          }\n        }\n        stars.sort((a, b) => a - b);\n\n        // Créer la grille\n        newGrids.push({\n          id: `grid-${Date.now()}-${i}`,\n          numbers: numbers,\n          stars: stars,\n          method: model\n        });\n      }\n\n      // Mettre à jour l'état\n      setGeneratedGrids(newGrids);\n    } catch (e) {\n      console.error('Error generating grids:', e);\n      setError(e.message || 'Une erreur est survenue lors de la génération des grilles.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fonction pour imprimer une grille\n  const printGrid = grid => {\n    const printWindow = window.open('', '_blank');\n    printWindow.document.write(`\n      <html>\n        <head>\n          <title>Grille Euromillions</title>\n          <style>\n            body { font-family: Arial, sans-serif; padding: 20px; }\n            .grid-container { border: 1px solid #ccc; padding: 15px; max-width: 400px; margin: 0 auto; }\n            .grid-name { font-size: 18px; font-weight: bold; margin-bottom: 10px; }\n            .numbers-container { display: flex; justify-content: center; margin-bottom: 10px; }\n            .stars-container { display: flex; justify-content: center; }\n            .ball { display: inline-flex; align-items: center; justify-content: center; \n                   width: 40px; height: 40px; border-radius: 50%; margin: 0 5px; \n                   font-weight: bold; color: white; }\n            .number { background-color: #004b9f; }\n            .star { background-color: #fc0; color: #333; }\n            .footer { margin-top: 15px; font-size: 12px; text-align: center; color: #666; }\n          </style>\n        </head>\n        <body>\n          <div class=\"grid-container\">\n            <div class=\"grid-name\">Grille Euromillions</div>\n            <div class=\"numbers-container\">\n              ${grid.numbers.map(num => `<div class=\"ball number\">${num}</div>`).join('')}\n            </div>\n            <div class=\"stars-container\">\n              ${grid.stars.map(star => `<div class=\"ball star\">${star}</div>`).join('')}\n            </div>\n            <div class=\"footer\">Imprimé le ${new Date().toLocaleDateString()}</div>\n          </div>\n        </body>\n      </html>\n    `);\n    printWindow.document.close();\n    printWindow.focus();\n    setTimeout(() => {\n      printWindow.print();\n    }, 250);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: t('generateGrids') || 'Générer des grilles'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white dark:bg-gray-800 rounded-lg shadow p-6 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-4\",\n        children: t('gridGenerationOptions') || 'Options de génération'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",\n            children: t('generationModel') || 'Modèle de génération'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: model,\n            onChange: e => setModel(e.target.value),\n            className: \"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"random\",\n              children: t('randomModel') || 'Aléatoire'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"frequency\",\n              children: t('frequencyModel') || 'Fréquence'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hot_numbers\",\n              children: t('hotNumbersModel') || 'Numéros chauds'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",\n            children: t('numberOfGrids') || 'Nombre de grilles'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            max: \"10\",\n            value: count,\n            onChange: e => setCount(parseInt(e.target.value) || 1),\n            className: \"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: generateSimpleGrids,\n          disabled: loading,\n          className: \"w-full md:w-auto px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n          children: loading ? t('generating') || 'Génération en cours...' : t('generateGrids') || 'Générer des grilles'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), generatedGrids.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-4\",\n        children: t('generatedGrids') || 'Grilles générées'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n        children: generatedGrids.map(grid => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border rounded-lg shadow-sm p-4 bg-white dark:bg-gray-800 dark:border-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium text-lg mb-4\",\n            children: t('generatedGrid') || 'Grille générée'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center my-4\",\n            children: [grid.numbers.map(number => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-center w-10 h-10 mx-1 rounded-full bg-blue-600 text-white font-bold\",\n              children: number\n            }, `number-${number}-${grid.id}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mx-2 self-center\",\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this), grid.stars.map(star => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-center w-10 h-10 mx-1 rounded-full bg-yellow-400 text-yellow-900 font-bold\",\n              children: star\n            }, `star-${star}-${grid.id}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => alert('Fonctionnalité non disponible dans cette version simplifiée'),\n              className: \"px-3 py-1 text-sm bg-blue-600 text-white rounded hover:bg-blue-700\",\n              children: t('save') || 'Sauvegarder'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => printGrid(grid),\n              className: \"px-3 py-1 text-sm bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded hover:bg-gray-300 dark:hover:bg-gray-600\",\n              children: t('print') || 'Imprimer'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this)]\n        }, grid.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(GenerateGrid, \"l1QD5oHHvXZkVhw0XBt3YDw32iA=\", false, function () {\n  return [useTranslation];\n});\n_c = GenerateGrid;\nexport default GenerateGrid;\nvar _c;\n$RefreshReg$(_c, \"GenerateGrid\");","map":{"version":3,"names":["React","useState","useTranslation","jsxDEV","_jsxDEV","GenerateGrid","_s","t","generatedGrids","setGeneratedGrids","loading","setLoading","error","setError","count","setCount","model","setModel","generateSimpleGrids","newGrids","i","numbers","length","num","Math","floor","random","includes","push","sort","a","b","stars","star","id","Date","now","method","e","console","message","printGrid","grid","printWindow","window","open","document","write","map","join","toLocaleDateString","close","focus","setTimeout","print","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","type","min","max","parseInt","onClick","disabled","number","alert","_c","$RefreshReg$"],"sources":["C:/Users/Rga/euromillions-app/frontend/src/pages/GenerateGrid.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst GenerateGrid = () => {\r\n  const { t } = useTranslation();\r\n  const [generatedGrids, setGeneratedGrids] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [count, setCount] = useState(1);\r\n  const [model, setModel] = useState('random');\r\n\r\n  // Fonction simplifiée pour générer des grilles\r\n  const generateSimpleGrids = () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Créer un tableau de grilles\r\n      const newGrids = [];\r\n      \r\n      // Générer le nombre de grilles demandé\r\n      for (let i = 0; i < count; i++) {\r\n        // Générer 5 numéros aléatoires entre 1 et 50\r\n        const numbers = [];\r\n        while (numbers.length < 5) {\r\n          const num = Math.floor(Math.random() * 50) + 1;\r\n          if (!numbers.includes(num)) {\r\n            numbers.push(num);\r\n          }\r\n        }\r\n        numbers.sort((a, b) => a - b);\r\n        \r\n        // Générer 2 étoiles aléatoires entre 1 et 12\r\n        const stars = [];\r\n        while (stars.length < 2) {\r\n          const star = Math.floor(Math.random() * 12) + 1;\r\n          if (!stars.includes(star)) {\r\n            stars.push(star);\r\n          }\r\n        }\r\n        stars.sort((a, b) => a - b);\r\n        \r\n        // Créer la grille\r\n        newGrids.push({\r\n          id: `grid-${Date.now()}-${i}`,\r\n          numbers: numbers,\r\n          stars: stars,\r\n          method: model\r\n        });\r\n      }\r\n      \r\n      // Mettre à jour l'état\r\n      setGeneratedGrids(newGrids);\r\n    } catch (e) {\r\n      console.error('Error generating grids:', e);\r\n      setError(e.message || 'Une erreur est survenue lors de la génération des grilles.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fonction pour imprimer une grille\r\n  const printGrid = (grid) => {\r\n    const printWindow = window.open('', '_blank');\r\n    \r\n    printWindow.document.write(`\r\n      <html>\r\n        <head>\r\n          <title>Grille Euromillions</title>\r\n          <style>\r\n            body { font-family: Arial, sans-serif; padding: 20px; }\r\n            .grid-container { border: 1px solid #ccc; padding: 15px; max-width: 400px; margin: 0 auto; }\r\n            .grid-name { font-size: 18px; font-weight: bold; margin-bottom: 10px; }\r\n            .numbers-container { display: flex; justify-content: center; margin-bottom: 10px; }\r\n            .stars-container { display: flex; justify-content: center; }\r\n            .ball { display: inline-flex; align-items: center; justify-content: center; \r\n                   width: 40px; height: 40px; border-radius: 50%; margin: 0 5px; \r\n                   font-weight: bold; color: white; }\r\n            .number { background-color: #004b9f; }\r\n            .star { background-color: #fc0; color: #333; }\r\n            .footer { margin-top: 15px; font-size: 12px; text-align: center; color: #666; }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <div class=\"grid-container\">\r\n            <div class=\"grid-name\">Grille Euromillions</div>\r\n            <div class=\"numbers-container\">\r\n              ${grid.numbers.map(num => `<div class=\"ball number\">${num}</div>`).join('')}\r\n            </div>\r\n            <div class=\"stars-container\">\r\n              ${grid.stars.map(star => `<div class=\"ball star\">${star}</div>`).join('')}\r\n            </div>\r\n            <div class=\"footer\">Imprimé le ${new Date().toLocaleDateString()}</div>\r\n          </div>\r\n        </body>\r\n      </html>\r\n    `);\r\n    \r\n    printWindow.document.close();\r\n    printWindow.focus();\r\n    setTimeout(() => {\r\n      printWindow.print();\r\n    }, 250);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">{t('generateGrids') || 'Générer des grilles'}</h1>\r\n      \r\n      {/* Panneau de génération simple */}\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 mb-8\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">{t('gridGenerationOptions') || 'Options de génération'}</h2>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              {t('generationModel') || 'Modèle de génération'}\r\n            </label>\r\n            <select\r\n              value={model}\r\n              onChange={(e) => setModel(e.target.value)}\r\n              className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n            >\r\n              <option value=\"random\">{t('randomModel') || 'Aléatoire'}</option>\r\n              <option value=\"frequency\">{t('frequencyModel') || 'Fréquence'}</option>\r\n              <option value=\"hot_numbers\">{t('hotNumbersModel') || 'Numéros chauds'}</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              {t('numberOfGrids') || 'Nombre de grilles'}\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max=\"10\"\r\n              value={count}\r\n              onChange={(e) => setCount(parseInt(e.target.value) || 1)}\r\n              className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"mt-6\">\r\n          <button\r\n            onClick={generateSimpleGrids}\r\n            disabled={loading}\r\n            className=\"w-full md:w-auto px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n          >\r\n            {loading ? (t('generating') || 'Génération en cours...') : (t('generateGrids') || 'Générer des grilles')}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Message d'erreur */}\r\n      {error && (\r\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6\">\r\n          <p>{error}</p>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Affichage des grilles */}\r\n      {generatedGrids.length > 0 && (\r\n        <div>\r\n          <h2 className=\"text-xl font-semibold mb-4\">{t('generatedGrids') || 'Grilles générées'}</h2>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {generatedGrids.map((grid) => (\r\n              <div key={grid.id} className=\"border rounded-lg shadow-sm p-4 bg-white dark:bg-gray-800 dark:border-gray-700\">\r\n                <h3 className=\"font-medium text-lg mb-4\">{t('generatedGrid') || 'Grille générée'}</h3>\r\n                \r\n                <div className=\"flex justify-center my-4\">\r\n                  {grid.numbers.map((number) => (\r\n                    <div \r\n                      key={`number-${number}-${grid.id}`} \r\n                      className=\"flex items-center justify-center w-10 h-10 mx-1 rounded-full bg-blue-600 text-white font-bold\"\r\n                    >\r\n                      {number}\r\n                    </div>\r\n                  ))}\r\n                  \r\n                  <span className=\"mx-2 self-center\">+</span>\r\n                  \r\n                  {grid.stars.map((star) => (\r\n                    <div \r\n                      key={`star-${star}-${grid.id}`} \r\n                      className=\"flex items-center justify-center w-10 h-10 mx-1 rounded-full bg-yellow-400 text-yellow-900 font-bold\"\r\n                    >\r\n                      {star}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                \r\n                <div className=\"flex justify-between mt-4\">\r\n                  <button\r\n                    onClick={() => alert('Fonctionnalité non disponible dans cette version simplifiée')}\r\n                    className=\"px-3 py-1 text-sm bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n                  >\r\n                    {t('save') || 'Sauvegarder'}\r\n                  </button>\r\n                  \r\n                  <button\r\n                    onClick={() => printGrid(grid)}\r\n                    className=\"px-3 py-1 text-sm bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded hover:bg-gray-300 dark:hover:bg-gray-600\"\r\n                  >\r\n                    {t('print') || 'Imprimer'}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenerateGrid;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}