{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rga\\\\Desktop\\\\HelloEuro\\\\euromillions-app\\\\frontend\\\\src\\\\pages\\\\LastDraw.js\",\n  _s = $RefreshSig$();\n// frontend/src/pages/LastDraw.js - Correction\n\nimport React, { useState, useEffect } from 'react';\nimport { drawsApi } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LastDraw = () => {\n  _s();\n  const [drawData, setDrawData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      console.log('Chargement du dernier tirage...');\n      try {\n        setLoading(true);\n        const response = await drawsApi.getLatest();\n\n        // Vérification des données\n        if (response.data && response.data.date) {\n          const drawDate = new Date(response.data.date);\n          const today = new Date();\n          if (drawDate > today) {\n            console.error('Données invalides: date dans le futur:', response.data);\n            setError('Données invalides reçues du serveur');\n          } else {\n            console.log('Données du dernier tirage chargées avec succès');\n            setDrawData(response.data);\n            setError(null);\n          }\n        } else {\n          console.error('Données incomplètes reçues:', response.data);\n          setError('Données incomplètes reçues du serveur');\n        }\n      } catch (error) {\n        console.error('Erreur lors du chargement du dernier tirage:', error);\n        setError(`Erreur: ${error.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n\n    // Pas de mécanisme de rechargement automatique\n  }, []);\n  if (loading && !drawData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Chargement du dernier tirage...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n  if (error && !drawData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Erreur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"R\\xE9essayer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"draw-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dernier Tirage EuroMillions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), drawData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"draw-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"draw-date\",\n        children: [\"Tirage du \", new Date(drawData.date).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"numbers-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"regular-numbers\",\n          children: drawData.numbers.map((num, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"euromillions-number regular\",\n            children: num\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"star-numbers\",\n          children: drawData.stars.map((star, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"euromillions-number star\",\n            children: star\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), drawData.jackpot && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"jackpot\",\n        children: [\"Jackpot: \", drawData.jackpot]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"winners\",\n        children: [\"Gagnants du jackpot: \", drawData.winners === '0' ? 'Aucun' : drawData.winners]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(LastDraw, \"XQvUOb37MAfqE+oz1TMDgTRHP2s=\");\n_c = LastDraw;\nexport default LastDraw;\nvar _c;\n$RefreshReg$(_c, \"LastDraw\");","map":{"version":3,"names":["React","useState","useEffect","drawsApi","jsxDEV","_jsxDEV","LastDraw","_s","drawData","setDrawData","loading","setLoading","error","setError","fetchData","console","log","response","getLatest","data","date","drawDate","Date","today","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","toLocaleDateString","numbers","map","num","index","stars","star","jackpot","winners","_c","$RefreshReg$"],"sources":["C:/Users/Rga/Desktop/HelloEuro/euromillions-app/frontend/src/pages/LastDraw.js"],"sourcesContent":["// frontend/src/pages/LastDraw.js - Correction\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { drawsApi } from '../utils/api';\r\n\r\nconst LastDraw = () => {\r\n  const [drawData, setDrawData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      console.log('Chargement du dernier tirage...');\r\n      try {\r\n        setLoading(true);\r\n        const response = await drawsApi.getLatest();\r\n        \r\n        // Vérification des données\r\n        if (response.data && response.data.date) {\r\n          const drawDate = new Date(response.data.date);\r\n          const today = new Date();\r\n          \r\n          if (drawDate > today) {\r\n            console.error('Données invalides: date dans le futur:', response.data);\r\n            setError('Données invalides reçues du serveur');\r\n          } else {\r\n            console.log('Données du dernier tirage chargées avec succès');\r\n            setDrawData(response.data);\r\n            setError(null);\r\n          }\r\n        } else {\r\n          console.error('Données incomplètes reçues:', response.data);\r\n          setError('Données incomplètes reçues du serveur');\r\n        }\r\n      } catch (error) {\r\n        console.error('Erreur lors du chargement du dernier tirage:', error);\r\n        setError(`Erreur: ${error.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n    \r\n    // Pas de mécanisme de rechargement automatique\r\n  }, []);\r\n  \r\n  if (loading && !drawData) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <p>Chargement du dernier tirage...</p>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  if (error && !drawData) {\r\n    return (\r\n      <div className=\"error-container\">\r\n        <h2>Erreur</h2>\r\n        <p>{error}</p>\r\n        <button onClick={() => window.location.reload()}>Réessayer</button>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className=\"draw-container\">\r\n      <h2>Dernier Tirage EuroMillions</h2>\r\n      \r\n      {drawData && (\r\n        <div className=\"draw-result\">\r\n          <p className=\"draw-date\">\r\n            Tirage du {new Date(drawData.date).toLocaleDateString()}\r\n          </p>\r\n          \r\n          <div className=\"numbers-container\">\r\n            <div className=\"regular-numbers\">\r\n              {drawData.numbers.map((num, index) => (\r\n                <span key={index} className=\"euromillions-number regular\">\r\n                  {num}\r\n                </span>\r\n              ))}\r\n            </div>\r\n            \r\n            <div className=\"star-numbers\">\r\n              {drawData.stars.map((star, index) => (\r\n                <span key={index} className=\"euromillions-number star\">\r\n                  {star}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          \r\n          {drawData.jackpot && (\r\n            <p className=\"jackpot\">Jackpot: {drawData.jackpot}</p>\r\n          )}\r\n          \r\n          <p className=\"winners\">\r\n            Gagnants du jackpot: {drawData.winners === '0' ? 'Aucun' : drawData.winners}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LastDraw;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}